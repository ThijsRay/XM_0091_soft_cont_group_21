# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: {{ include "socon.fullname" . }}-ca-issuer
    cert-manager.io/common-name: {{ .Values.ingress.hostname }}
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.org/client-max-body-size: "50m"
    {{ if eq .Values.ingress.class "gce" }}
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.gke.ip_name }}
    {{ end }}
  labels:
    app: {{ include "socon.fullname" . }}-ingress
  name: {{ include "socon.fullname" . }}-ingress
spec:
  rules:
    - host: {{ .Values.ingress.hostname | quote }}
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: {{ include "socon.fullname" . }}-backend
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "socon.fullname" . }}-frontend
                port:
                  number: 80
  tls: # < placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
  - hosts: 
    - {{ .Values.ingress.hostname | quote }}
    secretName: {{ include "socon.fullname" . }}-ingress-cert # < cert-manager will store the created certificate in this secret
